{"id":1522092869,"question_id":70,"lang":"python3","lang_name":"Python3","time":"17Â hours, 48Â minutes","timestamp":1737981401,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1522092869/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"17.6 MB","code":"class Solution:\n    def climbStairs(self, n: int) -> int:\n        if n <= 1:\n            return n\n\n        # To store the curr Fibonacci number\n        curr = 0\n\n        # To store the previous Fibonacci numbers\n        prev1 = 1\n        prev2 = 1\n\n        # Loop to calculate Fibonacci numbers from 2 to n\n        for i in range(2, n + 1):\n        \n            # Calculate the curr Fibonacci number\n            curr = prev1 + prev2\n\n            # Update prev2 to the last Fibonacci number\n            prev2 = prev1\n\n            # Update prev1 to the curr Fibonacci number\n            prev1 = curr\n\n        return curr","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs","has_notes":false,"flag_type":1}